{"version":3,"file":"login-9922119c.js","sources":["../../../../pages/login.vue"],"sourcesContent":["<template>\n    <div class=\"authentication\">\n        <div class=\"container d-flex flex-column\">\n            <div class=\"row align-items-center justify-content-center no-gutters min-vh-100\">\n                <div class=\"col-12 col-md-7 col-lg-5 col-xl-4 py-md-11\">\n                    <div class=\"card border-0 shadow-sm\">\n                        <div class=\"card-body\">\n\n                            <h3 class=\"text-center\">登录</h3>\n\n                            <p class=\"text-center mb-6\">登录自主用户，开始聊天</p>\n                            <el-form\n                                ref=\"ruleFormRef\"\n                                :model=\"ruleForm\"\n                                :rules=\"rules\"\n                                class=\"demo-ruleForm\"\n                                status-icon\n                            >\n                                <el-form-item prop=\"email\">\n                                    <div class=\"input-group\">\n                                        <input type=\"email\" class=\"form-control form-control-lg\"\n                                               v-model=\"ruleForm.email\"\n                                               placeholder=\"输入你的邮箱\">\n                                    </div>\n                                </el-form-item>\n                                <el-form-item prop=\"password\">\n                                    <div class=\"input-group\">\n                                        <input type=\"password\" class=\"form-control form-control-lg\"\n                                               v-model=\"ruleForm.password\"\n                                               placeholder=\"输入你的密码\">\n                                    </div>\n                                </el-form-item>\n                                <div class=\"form-group d-flex justify-content-between mb-4\">\n                                    <NuxtLink class=\"link\" href=\"/users/reset\">忘记密码</NuxtLink>\n                                </div>\n                                <el-form-item>\n                                    <el-button :loading=\"login_loading\" size=\"large\" type=\"primary\" @click=\"submitForm(ruleFormRef)\" class=\"login\">\n                                        登录\n                                    </el-button>\n                                </el-form-item>\n                            </el-form>\n\n\n                            <p class=\"text-center mb-0\">还没有账户？ <NuxtLink class=\"link\" to=\"/register\">注册一个</NuxtLink>.</p>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { reactive, ref } from 'vue'\nimport type { FormInstance, FormRules } from 'element-plus'\nimport { ElMessage } from 'element-plus'\nimport { useCounter } from '~/store/counter'\nconst counter = useCounter()\n\nuseHead({\n    title: '登录 - '+counter.setting.title,\n    meta: [\n        { name: 'description', content: counter.setting.description},\n        { name: 'keywords', content: counter.setting.keywords}\n    ]\n})\ndefinePageMeta({\n    layout: false,\n    middleware: ['auth']\n})\nconst email = ref('')\nconst password = ref('')\nconst ruleFormRef = ref<FormInstance>()\nconst ruleForm = reactive({\n    email: '',\n    password: ''\n})\nconst rules = reactive<FormRules>({\n    email: [\n        { required: true, message: '请输入邮箱', trigger: 'blur' },\n        { type: 'email', message: '请输入正确的邮箱地址', trigger: ['blur', 'change'] }\n    ],\n    password: [\n        { required: true, message: '请输入密码', trigger: 'blur' },\n        { min: 6, max: 20, message: '密码长度在 6 到 20 个字符', trigger: 'blur' }\n    ]\n})\nconst login_loading = ref(false)\nconst token = useCookie('token')\nconst user_info = useCookie('user_info')\nconst router = useRouter()\nconst submitForm = async (formEl: FormInstance | undefined) => {\n    if (!formEl) return\n    await formEl.validate((valid, fields) => {\n        if (valid) {\n            login_loading.value = true\n            logins({\n                email: ruleForm.email,\n                password: ruleForm.password\n            }).then((res:any) => {\n                login_loading.value = false\n                if (res._rawValue.status == 200) {\n                    token.value = res._rawValue.token\n                    user_info.value = res._rawValue.user_info\n                    ElMessage.success(res._rawValue.message)\n                    router.push('/')\n                }\n            }).catch((err:any) => {\n                login_loading.value = false\n            })\n        } else {\n            console.log('error submit!', fields)\n        }\n    })\n}\n\n</script>\n\n<style scoped>\n\n</style>\n"],"names":["useHead","title","meta","name","content","email","password","required","message","trigger","type","min","max","logins","token","user_info","router","console"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DQA,YAAAA;AAAAA,MACJC,OAAAA,UAAAA,QAAAA,QAAAA;AAAAA,MACAC,MAAAA,CAAAA;AAAAA,QACMC,MAAAA;AAAAA,QAAqBC,SAAAA,QAAAA,QAAAA;AAAAA,MAAoC,GAAA;AAAA,QACzDD,MAAAA;AAAAA,QAAkBC,SAAAA,QAAAA,QAAAA;AAAAA;IAE5B,CAAA;AAKM,QAAA,EAAA;AACA,QAAA,EAAA;;;MAGFC,OAAAA;AAAAA,MACAC,UAAAA;AAAAA,IACJ,CAAA;;MAEID,OAAAA,CAAAA;AAAAA,QACME,UAAAA;AAAAA,QAAgBC,SAAAA;AAAAA,QAAkBC,SAAAA;AAAAA,MAAgB,GAAA;AAAA,QAClDC,MAAAA;AAAAA,QAAeF,SAAAA;AAAAA,QAAuBC,SAAAA,CAAAA,QAAAA,QAAAA;AAAAA,MAA4B,CAAA;AAAA,MAExEH,UAAAA,CAAAA;AAAAA,QACMC,UAAAA;AAAAA,QAAgBC,SAAAA;AAAAA,QAAkBC,SAAAA;AAAAA,MAAgB,GAAA;AAAA,QAClDE,KAAAA;AAAAA,QAAQC,KAAAA;AAAAA,QAASJ,SAAAA;AAAAA,QAA6BC,SAAAA;AAAAA;IAExD,CAAA;AACM,UAAA,gBAAA,IAAA,KAAA;AACA,UAAA,QAAA,UAAA,OAAA;AACA,UAAA,YAAA,UAAA,WAAA;;AAEA,UAAA,aAAA,OAAA,WAAA;;;;AAGE,YAAA,OAAA;;AAEWI,iBAAAA;AAAAA;;UAGP,CAAA,EAAA,KAAA,SAAA;;AAEQ,gBAAA,IAAA,UAAA,UAAA,KAAA;AACMC,oBAAAA,QAAAA,IAAAA,UAAAA;AACIC,wBAAAA,QAAAA,IAAAA,UAAAA;;AAEVC,qBAAAA,KAAAA,GAAAA;AAAAA,YACJ;AAAA,UACJ,CAAA,EAAA,MAAA,SAAA;;UAEA,CAAA;AAAA,QACJ,OAAA;AACYC,kBAAAA,IAAAA,iBAAAA,MAAAA;AAAAA,QACZ;AAAA,MACJ,CAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}