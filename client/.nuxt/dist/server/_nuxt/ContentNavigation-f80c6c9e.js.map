{"version":3,"file":"ContentNavigation-f80c6c9e.js","sources":["../../../../node_modules/@nuxt/content/dist/runtime/composables/navigation.mjs","../../../../node_modules/@nuxt/content/dist/runtime/components/ContentNavigation.vue"],"sourcesContent":["import { hash } from \"ohash\";\nimport { useRuntimeConfig, useCookie } from \"#app\";\nimport { encodeQueryParams } from \"../utils/query.mjs\";\nimport { jsonStringify } from \"../utils/json.mjs\";\nimport { addPrerenderPath, shouldUseClientDB, withContentBase } from \"./utils.mjs\";\nimport { queryContent } from \"./query.mjs\";\nexport const fetchContentNavigation = async (queryBuilder) => {\n  const { content } = useRuntimeConfig().public;\n  if (typeof queryBuilder?.params !== \"function\") {\n    queryBuilder = queryContent(queryBuilder);\n  }\n  const params = queryBuilder.params();\n  const apiPath = content.experimental.stripQueryParameters ? withContentBase(`/navigation/${process.dev ? \"_\" : `${hash(params)}.${content.integrity}`}/${encodeQueryParams(params)}.json`) : withContentBase(process.dev ? `/navigation/${hash(params)}` : `/navigation/${hash(params)}.${content.integrity}.json`);\n  if (!process.dev && process.server) {\n    addPrerenderPath(apiPath);\n  }\n  if (shouldUseClientDB()) {\n    const generateNavigation = await import(\"./client-db\").then((m) => m.generateNavigation);\n    return generateNavigation(params);\n  }\n  const data = await $fetch(apiPath, {\n    method: \"GET\",\n    responseType: \"json\",\n    params: content.experimental.stripQueryParameters ? void 0 : {\n      _params: jsonStringify(params),\n      previewToken: useCookie(\"previewToken\").value\n    }\n  });\n  if (typeof data === \"string\" && data.startsWith(\"<!DOCTYPE html>\")) {\n    throw new Error(\"Not found\");\n  }\n  return data;\n};\n","<script>\nimport { toRefs, defineComponent, h, useSlots, computed } from \"vue\";\nimport { hash } from \"ohash\";\nimport { useAsyncData, fetchContentNavigation, useState, useContent } from \"#imports\";\nimport { NuxtLink } from \"#components\";\nexport default defineComponent({\n  name: \"ContentNavigation\",\n  props: {\n    /**\n     * A query to be passed to `fetchContentNavigation()`.\n     */\n    query: {\n      type: Object,\n      required: false,\n      default: void 0\n    }\n  },\n  async setup(props) {\n    const {\n      query\n    } = toRefs(props);\n    const queryBuilder = computed(() => {\n      if (typeof query.value?.params === \"function\") {\n        return query.value.params();\n      }\n      return query.value;\n    });\n    if (!queryBuilder.value && useState(\"dd-navigation\").value) {\n      const { navigation: navigation2 } = useContent();\n      return { navigation: navigation2 };\n    }\n    const { data: navigation } = await useAsyncData(\n      `content-navigation-${hash(queryBuilder.value)}`,\n      () => fetchContentNavigation(queryBuilder.value)\n    );\n    return { navigation };\n  },\n  /**\n   * Navigation empty fallback\n   * @slot empty\n   */\n  render(ctx) {\n    const slots = useSlots();\n    const { navigation } = ctx;\n    const renderLink = (link) => h(NuxtLink, { to: link._path }, () => link.title);\n    const renderLinks = (data, level) => h(\n      \"ul\",\n      level ? { \"data-level\": level } : null,\n      data.map((link) => {\n        if (link.children) {\n          return h(\"li\", null, [renderLink(link), renderLinks(link.children, level + 1)]);\n        }\n        return h(\"li\", null, renderLink(link));\n      })\n    );\n    const defaultNode = (data) => renderLinks(data, 0);\n    return slots?.default ? slots.default({ navigation, ...this.$attrs }) : defaultNode(navigation);\n  }\n});\n</script>\n"],"names":["useContent","NuxtLink"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAMO,MAAM,yBAAyB,OAAO,iBAAiB;AAC5D,QAAM,EAAE,QAAO,IAAK,iBAAgB,EAAG;AACvC,MAAI,QAAO,6CAAc,YAAW,YAAY;AAC9C,mBAAe,aAAa,YAAY;AAAA,EACzC;AACD,QAAM,SAAS,aAAa;AAC5B,QAAM,UAAU,QAAQ,aAAa,uBAAuB,gBAAgB,eAAmC,GAAG,KAAK,MAAM,KAAK,QAAQ,eAAe,kBAAkB,MAAM,QAAQ,IAAI,gBAA8D,eAAe,KAAK,MAAM,KAAK,QAAQ,gBAAgB;AAC9Q;AAClC,qBAAiB,OAAO;AAAA,EACzB;AACD,MAAI,kBAAiB,GAAI;AACvB,UAAM,qBAAqB,MAAM,OAAO,yBAAa,EAAE,KAAK,CAAC,MAAM,EAAE,kBAAkB;AACvF,WAAO,mBAAmB,MAAM;AAAA,EACjC;AACD,QAAM,OAAO,MAAM,OAAO,SAAS;AAAA,IACjC,QAAQ;AAAA,IACR,cAAc;AAAA,IACd,QAAQ,QAAQ,aAAa,uBAAuB,SAAS;AAAA,MAC3D,SAAS,cAAc,MAAM;AAAA,MAC7B,cAAc,UAAU,cAAc,EAAE;AAAA,IACzC;AAAA,EACL,CAAG;AACD,MAAI,OAAO,SAAS,YAAY,KAAK,WAAW,iBAAiB,GAAG;AAClE,UAAM,IAAI,MAAM,WAAW;AAAA,EAC5B;AACD,SAAO;AACT;AC3BA,MAAA,YAAA,gCAAA;AAAA;EAEE,OAAA;AAAA;AAAA;AAAA;AAAA,IAIE,OAAA;AAAA;MAEE,UAAA;AAAA;IAEF;AAAA;EAEF,MAAA,MAAA,OAAA;;;IAGE,IAAA,OAAA,KAAA;AACA,UAAA,eAAA,SAAA,MAAA;;AACE,UAAA,SAAA,WAAA,UAAA,mBAAA,YAAA,YAAA;;MAEA;AACA,aAAA,MAAA;AAAA,IACF,CAAA;;AAEE,YAAA,EAAA,YAAA,YAAA,IAAAA,mBAAA;AACA,aAAA,EAAA,YAAA;IACF;AACA,UAAA,EAAA,MAAA,WAAA,IAAA,MAAA;AAAA;MAEE,MAAA,uBAAA,aAAA,KAAA;AAAA;AAEF,WAAA,EAAA,WAAA;AAAA;;;;;;AAOA,UAAA,QAAA;AACA,UAAA,EAAA,WAAA,IAAA;AACA,UAAA,aAAA,CAAA,SAAA,EAAAC,oBAAA,EAAA,IAAA,KAAA,MAAA,GAAA,MAAA,KAAA,KAAA;AACA,UAAA,cAAA,CAAA,MAAA,UAAA;AAAA;MAEE,QAAA,EAAA,cAAA,MAAA,IAAA;AAAA,MACA,KAAA,IAAA,CAAA,SAAA;AACE,YAAA,KAAA,UAAA;AACE,iBAAA,EAAA,MAAA,MAAA,CAAA,WAAA,IAAA,GAAA,YAAA,KAAA,UAAA,QAAA,CAAA,CAAA,CAAA;AAAA,QACF;AACA,eAAA,EAAA,MAAA,MAAA,WAAA,IAAA,CAAA;AAAA;;AAGJ,UAAA,cAAA,CAAA,SAAA,YAAA,MAAA,CAAA;AACA,YAAA,+BAAA,WAAA,MAAA,QAAA,EAAA,YAAA,GAAA,KAAA,OAAA,CAAA,IAAA,YAAA,UAAA;AAAA,EACF;AACF,CAAA;;;;;;;","x_google_ignoreList":[0,1]}