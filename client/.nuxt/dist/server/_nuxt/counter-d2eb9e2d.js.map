{"version":3,"file":"counter-d2eb9e2d.js","sources":["../../../../node_modules/nuxt/dist/app/composables/fetch.mjs","../../../../utils/request.ts","../../../../utils/api.ts","../../../../store/counter.ts"],"sourcesContent":["import { computed, unref, reactive } from \"vue\";\nimport { hash } from \"ohash\";\nimport { useRequestFetch } from \"./ssr.mjs\";\nimport { useAsyncData } from \"./asyncData.mjs\";\nexport function useFetch(request, arg1, arg2) {\n  const [opts = {}, autoKey] = typeof arg1 === \"string\" ? [{}, arg1] : [arg1, arg2];\n  const _key = opts.key || hash([autoKey, unref(opts.baseURL), typeof request === \"string\" ? request : \"\", unref(opts.params || opts.query)]);\n  if (!_key || typeof _key !== \"string\") {\n    throw new TypeError(\"[nuxt] [useFetch] key must be a string: \" + _key);\n  }\n  if (!request) {\n    throw new Error(\"[nuxt] [useFetch] request is missing.\");\n  }\n  const key = _key === autoKey ? \"$f\" + _key : _key;\n  const _request = computed(() => {\n    let r = request;\n    if (typeof r === \"function\") {\n      r = r();\n    }\n    return unref(r);\n  });\n  const {\n    server,\n    lazy,\n    default: defaultFn,\n    transform,\n    pick,\n    watch,\n    immediate,\n    ...fetchOptions\n  } = opts;\n  const _fetchOptions = reactive({\n    ...fetchOptions,\n    cache: typeof opts.cache === \"boolean\" ? void 0 : opts.cache\n  });\n  const _asyncDataOptions = {\n    server,\n    lazy,\n    default: defaultFn,\n    transform,\n    pick,\n    immediate,\n    watch: [\n      _fetchOptions,\n      _request,\n      ...watch || []\n    ]\n  };\n  let controller;\n  const asyncData = useAsyncData(key, () => {\n    controller?.abort?.();\n    controller = typeof AbortController !== \"undefined\" ? new AbortController() : {};\n    const isLocalFetch = typeof _request.value === \"string\" && _request.value.startsWith(\"/\");\n    let _$fetch = opts.$fetch || globalThis.$fetch;\n    if (process.server && !opts.$fetch && isLocalFetch) {\n      _$fetch = useRequestFetch();\n    }\n    return _$fetch(_request.value, { signal: controller.signal, ..._fetchOptions });\n  }, _asyncDataOptions);\n  return asyncData;\n}\nexport function useLazyFetch(request, arg1, arg2) {\n  const [opts, autoKey] = typeof arg1 === \"string\" ? [{}, arg1] : [arg1, arg2];\n  return useFetch(\n    request,\n    {\n      ...opts,\n      lazy: true\n    },\n    // @ts-ignore\n    autoKey\n  );\n}\n","import { ElMessage } from 'element-plus'\nconst fetch = (url: string, options?: any): Promise<any>  => {\n    const token = useCookie(\"token\");\n    const headers = { // headers信息\n        'Authorization' : `Bearer ${token.value}`,\n    }\n    const { public: { baseUrl } } = useRuntimeConfig()\n    const reqUrl = baseUrl + url\n    return new Promise(async (resolve, reject) => {\n        useFetch(reqUrl, { ...options, headers }).then(({ data,error }: any) => {\n\n            if (!data._rawValue) {\n                if(error._value.status==500){\n                    ElMessage.error(\"服务器错误\")\n                }else{\n                    ElMessage.error(error._value.data.message)\n                }\n                // 这里处理错误回调\n                reject(error)\n            }else {\n                resolve(ref(data))\n            }\n        }).catch((err: any) => {\n            reject(err)\n        })\n    })\n}\n\nexport default new class Http {\n\n    get(url: string, params?: any): Promise<any> {\n        return fetch(url, { method: 'get', params })\n    }\n\n    post(url: string, params?: any): Promise<any>  {\n        return fetch(url, { method: 'post', params })\n    }\n\n    put(url: string, body?: any): Promise<any>  {\n        return fetch(url, { method: 'put', body })\n    }\n\n    delete(url: string, body?: any): Promise<any>  {\n        return fetch(url, { method: 'delete', body })\n    }\n\n\n}\n","import Http from '@/utils/request'\n\nexport const send = (params: any) => {\n    return Http.post('api/send_bot', params)\n}\n\n\n\nexport const logins = (params: any) => {\n    return Http.post('api/web_login', params)\n}\nexport const register = (params: any) => {\n    return Http.post('api/register', params)\n}\n\nexport const get_message = (params: any) => {\n    return Http.post('api/get_message',params)\n}\nexport const c_message = (params: any) => {\n    return Http.post('api/check_message', params)\n}\n\nexport const searchs = (params: any) => {\n    return Http.post('api/searchs', params)\n}\n\nexport const del_msg = (params: any) => {\n    return Http.post('api/del_msg', params)\n}\n\nexport const update_user = (params: any) => {\n    return Http.post('api/update_user', params)\n}\n\nexport const get_user = () => {\n    return Http.post('api/get_user')\n}\nexport const change_password = (params: any) => {\n    return Http.post('api/change_password', params)\n}\n\nexport const send_email = (params: any) => {\n    return Http.post('api/send_email', params)\n}\n\nexport const reset_password = (params: any) => {\n    return Http.post('api/reset_password', params)\n}\n\nexport const alipay = (params: any) => {\n    return Http.post('api/alipay', params)\n}\n\n\nexport const wechat = (params: any) => {\n    return Http.post('api/wechat', params)\n}\n\nexport const get_vip_show = () => {\n    return Http.post('api/get_vip_level')\n}\n\nexport const ai_draw_openai = (params:any) => {\n    return Http.post('api/ai_draw_openai',params)\n}\n\nexport const get_me_draw = () => {\n    return Http.post('api/get_me_draw')\n}\n\nexport const send_public = (params:any) => {\n    return Http.post('api/send_public',params)\n}\n\n\n\nexport const invite_code_send = () => {\n    return Http.post('api/invite_code')\n}\n\nexport const kami_send = (params:any) => {\n    return Http.post('api/kami_check',params)\n}\n\n\nexport const get_nav_config = () => {\n    return Http.post('api/get_setting')\n}\n","import { defineStore } from 'pinia'\n\ninterface CounterState {\n    setting:any\n}\n\n// @ts-ignore\nexport const useCounter = defineStore('counter', {\n    state: (): CounterState => ({\n        setting: {}\n    }),\n\n    actions: {\n        increment() {\n            this.setting\n        }\n    },\n\n    persist: process.client && {\n        storage: localStorage,\n        paths: ['setting']\n    }\n})\n"],"names":["public","baseUrl","headers","error","ElMessage","resolve","Http","get","method","params","post","put","body","delete","logins","register","get_message","c_message","update_user","get_user","change_password","send_email","reset_password","alipay","wechat","get_vip_show","ai_draw_openai","get_me_draw","send_public","kami_send","get_nav_config","useCounter","defineStore","state","setting","actions","increment","persist"],"mappings":"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","x_google_ignoreList":[0]}